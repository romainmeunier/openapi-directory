---
swagger: '2.0'
info:
  version: v4
  title: VPPartner.Member.Api V4
  description: ''
paths:
  "/{partner}/member/{email}":
    get:
      tags:
      - Member
      summary: Gets the member by e-mail or partnermemberid.
      operationId: ByPartnerMemberByEmailGet
      consumes: []
      produces: []
      parameters:
      - name: email
        in: path
        description: The email.
        required: true
        type: string
      - name: PartnerMemberID
        in: query
        description: The partner member identifier.
        required: false
        type: string
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/search":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberSearchPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: search
        in: body
        required: false
        schema:
          "$ref": "#/definitions/VPPartner.Member.Dto.MemberSearchModel"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{PartnerMemberID}":
    get:
      tags:
      - Member
      operationId: ByPartnerMemberByPartnerMemberIDGet
      consumes: []
      produces: []
      parameters:
      - name: PartnerMemberID
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/updatePassword/{memberId}":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberUpdatePasswordByMemberIdPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: memberId
        in: path
        required: true
        type: integer
        format: int32
      - name: memberPasswordModel
        in: body
        required: false
        schema:
          "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberPasswordModel"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member":
    post:
      tags:
      - Member
      summary: "Adds the member or update.\r\nroute : api/Member/{partnerMemberId}/Update"
      operationId: ByPartnerMemberPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: member
        in: body
        description: The complete member.
        required: false
        schema:
          "$ref": "#/definitions/VPPartner.Common.Dto.Member.CompleteMember"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/Addresses":
    get:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDAddressesGet
      consumes: []
      produces: []
      parameters:
      - name: memberID
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/address/create":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDAddressCreatePost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: memberID
        in: path
        required: true
        type: integer
        format: int32
      - name: addresses
        in: body
        required: false
        schema:
          type: array
          items:
            "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberAddress"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/address/update":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDAddressUpdatePost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: memberID
        in: path
        required: true
        type: integer
        format: int32
      - name: addresses
        in: body
        required: false
        schema:
          type: array
          items:
            "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberAddress"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/address/{addressID}":
    get:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDAddressByAddressIDGet
      consumes: []
      produces: []
      parameters:
      - name: memberID
        in: path
        required: true
        type: integer
        format: int32
      - name: addressID
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDAddressByAddressIDDelete
      consumes: []
      produces: []
      parameters:
      - name: memberID
        in: path
        required: true
        type: integer
        format: int32
      - name: addressID
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/attributes":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDAttributesPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: memberID
        in: path
        required: true
        type: integer
        format: int32
      - name: attributes
        in: body
        required: false
        schema:
          type: array
          items:
            "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberAttribute"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/Attributes":
    get:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDAttributesGet
      consumes: []
      produces: []
      parameters:
      - name: memberID
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/Subscriptions":
    get:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDSubscriptionsGet
      consumes: []
      produces: []
      parameters:
      - name: memberId
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
    post:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDSubscriptionsPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: memberId
        in: path
        required: true
        type: integer
        format: int32
      - name: attributes
        in: body
        required: false
        schema:
          type: array
          items:
            "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberSubscription"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberID}/Facebook":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIDFacebookPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: memberId
        in: path
        required: true
        type: integer
        format: int32
      - name: facebookId
        in: body
        required: false
        schema:
          type: string
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberId}/Facebook":
    get:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIdFacebookGet
      consumes: []
      produces: []
      parameters:
      - name: memberId
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/Facebook/{facebookId}/{siteId}":
    get:
      tags:
      - Member
      operationId: ByPartnerMemberFacebookByFacebookIdBySiteIdGet
      consumes: []
      produces: []
      parameters:
      - name: facebookId
        in: path
        required: true
        type: string
      - name: siteId
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberId}/device/{deviceId}/authentification":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIdDeviceByDeviceIdAuthentificationPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: memberId
        in: path
        required: true
        type: integer
        format: int32
      - name: deviceId
        in: path
        required: true
        type: integer
        format: int32
      - name: memberDeviceAuthentification
        in: body
        required: false
        schema:
          "$ref": "#/definitions/VPPartner.Member.Dto.MemberDeviceAuthentification"
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
  "/{partner}/member/{memberId}/device/{deviceId}/operation/{operationId}":
    post:
      tags:
      - Member
      operationId: ByPartnerMemberByMemberIdDeviceByDeviceIdOperationByOperationIdPost
      consumes: []
      produces: []
      parameters:
      - name: memberId
        in: path
        required: true
        type: integer
        format: int32
      - name: deviceId
        in: path
        required: true
        type: integer
        format: int32
      - name: operationId
        in: path
        required: true
        type: integer
        format: int32
      - name: partner
        in: path
        required: true
        type: string
      - name: Partner-Token
        in: header
        description: partner token
        required: true
        type: string
      responses:
        '200':
          description: Success
definitions:
  VPPartner.Member.Dto.MemberSearchModel:
    type: object
    properties:
      email:
        type: string
      memberId:
        format: int32
        type: integer
  VPPartner.Common.Dto.Member.MemberPasswordModel:
    required:
    - encryptedNewPassword
    type: object
    properties:
      memberId:
        format: int32
        type: integer
      password:
        type: string
      partnerName:
        type: string
      encryptedPassword:
        type: string
      encryptedOldPassword:
        type: string
      encryptedNewPassword:
        type: string
  VPPartner.Common.Dto.Member.CompleteMember:
    required:
    - baseMember
    type: object
    properties:
      baseMember:
        "$ref": "#/definitions/VPPartner.Common.Dto.Member.BaseMember"
      address:
        "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberAddress"
      attributes:
        type: array
        items:
          "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberAttribute"
      subscriptions:
        type: array
        items:
          "$ref": "#/definitions/VPPartner.Common.Dto.Member.MemberSubscription"
  VPPartner.Common.Dto.Member.BaseMember:
    required:
    - civility
    - email
    - firstName
    - lastName
    - birthdayDate
    type: object
    properties:
      civility:
        type: string
      email:
        type: string
      firstName:
        maxLength: 50
        type: string
      lastName:
        maxLength: 50
        type: string
      memberId:
        format: int32
        type: integer
      partnerMemberId:
        format: int32
        type: integer
      countryCode:
        enum:
        - BE
        - NL
        - FR
        - DE
        - ES
        - IT
        - EN
        - AT
        - LU
        - GB
        - AF
        - ZA
        - AX
        - AL
        - DZ
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AN
        - SA
        - AR
        - AM
        - AW
        - AU
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BA
        - BW
        - BV
        - BR
        - BN
        - BG
        - BF
        - BI
        - KY
        - KH
        - CM
        - CA
        - CV
        - CF
        - CL
        - CN
        - CX
        - CY
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - KR
        - KP
        - CR
        - CI
        - HR
        - CU
        - DK
        - DJ
        - DO
        - DM
        - EG
        - SV
        - AE
        - EC
        - ER
        - EE
        - US
        - ET
        - FK
        - FO
        - FJ
        - FI
        - GA
        - GM
        - GE
        - GS
        - GH
        - GI
        - GR
        - GD
        - GL
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GQ
        - GY
        - GF
        - HT
        - HM
        - HN
        - HK
        - HU
        - IM
        - UM
        - VG
        - VI
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IS
        - IL
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KG
        - KI
        - KW
        - LA
        - LS
        - LV
        - LB
        - LR
        - LY
        - LI
        - LT
        - MO
        - MK
        - MG
        - MY
        - MW
        - MV
        - ML
        - MT
        - MP
        - MA
        - MH
        - MQ
        - MU
        - MR
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NI
        - NE
        - NG
        - NU
        - NF
        - 'NO'
        - NC
        - NZ
        - IO
        - OM
        - UG
        - UZ
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PF
        - PR
        - PT
        - QA
        - RE
        - RO
        - RU
        - RW
        - EH
        - BL
        - SH
        - LC
        - KN
        - SM
        - MF
        - PM
        - VA
        - VC
        - SB
        - WS
        - AS
        - ST
        - SN
        - RS
        - SC
        - SL
        - SG
        - SK
        - SI
        - SO
        - SD
        - LK
        - SE
        - CH
        - SR
        - SJ
        - SZ
        - SY
        - TJ
        - TW
        - TZ
        - TD
        - CZ
        - TF
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TM
        - TC
        - TR
        - TV
        - UA
        - UY
        - VU
        - VE
        - VN
        - WF
        - YE
        - ZM
        - ZW
        - CHF
        - CHD
        - CHI
        - FRK
        - DEK
        - ESK
        - ITK
        - CHK
        type: string
      birthdayDate:
        format: date-time
        type: string
      genderId:
        format: int32
        maximum: 2
        minimum: 0
        type: integer
      zipCode:
        type: string
      partnerSiteId:
        format: int32
        maximum: 2147483647
        minimum: 1
        type: integer
      cultureSiteId:
        format: int32
        type: integer
      encryptedPassword:
        type: string
      accountStateId:
        format: int32
        type: integer
      creationDate:
        format: date-time
        type: string
      modificationDate:
        format: date-time
        type: string
      mobile:
        type: string
      otherPhone:
        type: string
  VPPartner.Common.Dto.Member.MemberAddress:
    required:
    - addressName
    - firstName
    - lastName
    - street
    - postalCode
    - city
    - country
    - mobilePhone
    type: object
    properties:
      idAddress:
        format: int32
        type: integer
      memberId:
        format: int32
        type: integer
      typeAddress:
        type: string
      addressName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      box:
        type: string
      Number:
        format: int32
        type: integer
      street:
        type: string
      streetComplement:
        type: string
      address3:
        type: string
      postalCode:
        type: string
      city:
        type: string
      country:
        type: string
      mobilePhone:
        type: string
      companyName:
        type: string
      email:
        type: string
      language:
        type: string
      isDefault:
        type: boolean
      isFavorite:
        type: boolean
      floor:
        format: int32
        type: integer
      digicode:
        type: string
  VPPartner.Common.Dto.Member.MemberAttribute:
    type: object
    properties:
      keyName:
        type: string
      value:
        type: string
  VPPartner.Common.Dto.Member.MemberSubscription:
    type: object
    properties:
      typologySubDetailId:
        format: int32
        type: integer
      isActive:
        type: boolean
      isSentByEmail:
        type: boolean
      isSentByNotification:
        type: boolean
      unsubscribeReasonId:
        format: int32
        type: integer
  VPPartner.Member.Dto.MemberDeviceAuthentification:
    type: object
    properties:
      deviceUID:
        type: string
      ipAddress:
        type: string
