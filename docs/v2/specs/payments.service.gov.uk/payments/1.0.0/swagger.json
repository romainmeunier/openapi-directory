{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "publicapi.payments.service.gov.uk",
  "info": {
    "contact": {
      "x-twitter": "GOVUK"
    },
    "description": "GOV.UK Pay Api",
    "title": "GOV.UK Pay Api",
    "version": "1.0.0",
    "x-apisguru-categories": [
      "financial"
    ],
    "x-logo": {
      "url": "https://twitter.com/GOVUK/profile_image?size=original"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/alphagov/pay-publicapi/master/swagger/swagger.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "payments.service.gov.uk",
    "x-serviceName": "payments"
  },
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "description": "Public Api Endpoints for Refunds",
      "name": "refunds"
    }
  ],
  "paths": {
    "/v1/payments": {
      "get": {
        "description": "Search payments by reference, state, 'from' and 'to' date. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId": "searchPayments",
        "parameters": [
          {
            "description": "Your payment reference to search",
            "in": "query",
            "name": "reference",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user email used in the payment to be searched",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "State of payments to be searched. Example=success",
            "enum": [
              "range[created",
              "started",
              "submitted",
              "success",
              "failed",
              "cancelled",
              "error"
            ],
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Card brand used for payment. Example=master-card",
            "in": "query",
            "name": "card_brand",
            "required": false,
            "type": "string"
          },
          {
            "description": "From date of payments to be searched (this date is inclusive). Example=2015-08-13T12:35:00Z",
            "in": "query",
            "name": "from_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "To date of payments to be searched (this date is exclusive). Example=2015-08-14T12:35:00Z",
            "in": "query",
            "name": "to_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page number requested for the search, should be a positive integer (optional, defaults to 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to be shown per page, should be a positive integer (optional, defaults to 500, max 500)",
            "in": "query",
            "name": "display_size",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentSearchResults"
            }
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "422": {
            "description": "Invalid parameters: from_date, to_date, status, display_size. See Public API documentation for the correct data formats",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Search payments"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new payment for the account associated to the Authorisation token. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId": "newPayment",
        "parameters": [
          {
            "description": "requestPayload",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PaymentWithAllLinks"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "422": {
            "description": "Invalid attribute value: description. Must be less than or equal to 255 characters length",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Create new payment"
      }
    },
    "/v1/payments/{paymentId}": {
      "get": {
        "description": "Return information about the payment The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId": "getPayment",
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentWithAllLinks"
            }
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Find payment by ID"
      }
    },
    "/v1/payments/{paymentId}/cancel": {
      "post": {
        "description": "Cancel a payment based on the provided payment ID and the Authorisation token. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'. A payment can only be cancelled if it's in a state that isn't finished.",
        "operationId": "cancelPayment",
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Cancellation of payment failed",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Cancel payment"
      }
    },
    "/v1/payments/{paymentId}/events": {
      "get": {
        "description": "Return payment events information about a certain payment The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId": "getPaymentEvents",
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentEventsInformation"
            }
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Return payment events by ID"
      }
    },
    "/v1/payments/{paymentId}/refunds": {
      "get": {
        "description": "Return refunds for a payment. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId": "getRefunds",
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Get all refunds for a payment.",
        "tags": [
          "refunds"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Return issued refund information. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId": "submitRefund",
        "parameters": [
          {
            "description": "paymentId",
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "requestPayload",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePaymentRefundRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ACCEPTED"
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "412": {
            "description": "Refund amount available mismatch"
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Submit a refund for a payment",
        "tags": [
          "refunds"
        ]
      }
    },
    "/v1/payments/{paymentId}/refunds/{refundId}": {
      "get": {
        "description": "Return payment refund information by Refund ID The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId": "getRefundById",
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "refundId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Credentials are required to access this resource"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          },
          "500": {
            "description": "Downstream system error",
            "schema": {
              "$ref": "#/definitions/Payment%20Error"
            }
          }
        },
        "summary": "Find payment refund by ID",
        "tags": [
          "refunds"
        ]
      }
    }
  },
  "definitions": {
    "Billing Address": {},
    "Billing_Address": {
      "description": "A structure representing the billing address of a card",
      "properties": {
        "city": {
          "example": "address city",
          "readOnly": true,
          "type": "string"
        },
        "country": {
          "example": "UK",
          "readOnly": true,
          "type": "string"
        },
        "line1": {
          "example": "address line 1",
          "readOnly": true,
          "type": "string"
        },
        "line2": {
          "example": "address line 2",
          "readOnly": true,
          "type": "string"
        },
        "postcode": {
          "example": "AB1 2CD",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Card Payment": {},
    "Card_Payment": {
      "allOf": [
        {
          "$ref": "#/definitions/Payment"
        },
        {
          "properties": {
            "card_brand": {
              "description": "Card Brand",
              "example": "Visa",
              "readOnly": true,
              "type": "string"
            },
            "card_details": {
              "$ref": "#/definitions/Payment%20card%20details",
              "readOnly": true
            },
            "refund_summary": {
              "$ref": "#/definitions/Refund%20Summary",
              "readOnly": true
            },
            "settlement_summary": {
              "$ref": "#/definitions/Settlement%20Summary",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ]
    },
    "CreatePaymentRefundRequest": {
      "description": "The Payment Refund Request Payload",
      "properties": {
        "amount": {
          "description": "Amount in pence. Can't be more than the available amount for refunds",
          "example": "150000",
          "format": "int32",
          "maximum": 10000000,
          "minimum": 1,
          "type": "integer"
        },
        "refund_amount_available": {
          "description": "Amount in pence. Total amount still available before issuing the refund",
          "example": "200000",
          "format": "int32",
          "maximum": 10000000,
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "amount"
      ],
      "type": "object"
    },
    "CreatePaymentRequest": {
      "description": "The Payment Request Payload",
      "properties": {
        "amount": {
          "description": "amount in pence",
          "example": "12000",
          "format": "int32",
          "maximum": 10000000,
          "minimum": 1,
          "type": "integer"
        },
        "description": {
          "description": "payment description",
          "example": "New passport application",
          "type": "string"
        },
        "reference": {
          "description": "payment reference",
          "example": "12345",
          "type": "string"
        },
        "return_url": {
          "description": "service return url",
          "example": "https://service-name.gov.uk/transactions/12345",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "amount",
        "description",
        "reference",
        "return_url"
      ],
      "type": "object"
    },
    "Direct_Debit_Payment": {
      "allOf": [
        {
          "$ref": "#/definitions/Payment"
        },
        {
          "type": "object"
        }
      ]
    },
    "Payment": {
      "discriminator": "paymentType",
      "properties": {
        "amount": {
          "example": "1200",
          "format": "int64",
          "type": "integer"
        },
        "created_date": {
          "example": "2016-01-21T17:15:00Z",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "example": "Your Service Description",
          "type": "string"
        },
        "email": {
          "example": "your email",
          "type": "string"
        },
        "payment_id": {
          "example": "hu20sqlact5260q2nanm0q8u93",
          "readOnly": true,
          "type": "string"
        },
        "payment_provider": {
          "example": "worldpay",
          "readOnly": true,
          "type": "string"
        },
        "reference": {
          "example": "your-reference",
          "type": "string"
        },
        "return_url": {
          "example": "http://your.service.domain/your-reference",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/Payment%20state"
        }
      },
      "type": "object"
    },
    "Payment Error": {},
    "Payment Event information": {},
    "Payment card details": {},
    "Payment state": {},
    "PaymentEventsInformation": {
      "description": "A List of Payment Events information",
      "properties": {
        "_links": {
          "$ref": "#/definitions/linksForEvents"
        },
        "events": {
          "items": {
            "$ref": "#/definitions/Payment%20Event%20information"
          },
          "type": "array"
        },
        "payment_id": {
          "example": "hu20sqlact5260q2nanm0q8u93",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentSearchResults": {
      "properties": {
        "results": {
          "items": {
            "$ref": "#/definitions/Card%20Payment"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentWithAllLinks": {
      "properties": {
        "_links": {
          "$ref": "#/definitions/allLinksForAPayment",
          "readOnly": true
        },
        "payment": {
          "$ref": "#/definitions/Payment"
        }
      },
      "type": "object"
    },
    "Payment_Error": {
      "description": "A Payment Error response",
      "properties": {
        "code": {
          "example": "P0102",
          "type": "string"
        },
        "description": {
          "example": "Invalid attribute value: amount. Must be less than or equal to 10000000",
          "type": "string"
        },
        "field": {
          "example": "amount",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Payment_Event_information": {
      "description": "A List of Payment Events information",
      "properties": {
        "_links": {
          "$ref": "#/definitions/payment-event-link",
          "readOnly": true
        },
        "payment_id": {
          "example": "hu20sqlact5260q2nanm0q8u93",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/Payment%20state",
          "description": "state",
          "readOnly": true
        },
        "updated": {
          "description": "updated",
          "example": "updated_date",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Payment_card_details": {
      "description": "A structure representing the payment card",
      "properties": {
        "billing_address": {
          "$ref": "#/definitions/Billing%20Address",
          "readOnly": true
        },
        "card_brand": {
          "example": "Visa",
          "readOnly": true,
          "type": "string"
        },
        "cardholder_name": {
          "example": "Mr. Card holder",
          "readOnly": true,
          "type": "string"
        },
        "expiry_date": {
          "example": "12/20",
          "readOnly": true,
          "type": "string"
        },
        "last_digits_card_number": {
          "example": "1234",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Payment_state": {
      "description": "A structure representing the current state of the payment in its lifecycle.",
      "properties": {
        "code": {
          "description": "What went wrong with the Payment if it finished with an error - error code",
          "example": "P010",
          "readOnly": true,
          "type": "string"
        },
        "finished": {
          "default": false,
          "description": "Whether the payment has finished",
          "readOnly": true,
          "type": "boolean"
        },
        "message": {
          "description": "What went wrong with the Payment if it finished with an error - English message",
          "example": "User cancelled the payment",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "Current progress of the payment in its lifecycle",
          "example": "created",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "code",
        "finished",
        "message",
        "status"
      ],
      "type": "object"
    },
    "Refund Summary": {},
    "Refund_Summary": {
      "description": "A structure representing the refunds availability",
      "properties": {
        "amount_available": {
          "description": "Amount available for refund in pence",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "amount_submitted": {
          "description": "Amount submitted for refunds on this Payment in pence",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "Availability status of the refund",
          "example": "available",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Settlement Summary": {},
    "Settlement_Summary": {
      "description": "A structure representing information about a settlement",
      "properties": {
        "capture_submit_time": {
          "description": "Date and time capture request has been submitted (may be null if capture request was not immediately acknowledged by payment gateway)",
          "example": "2016-01-21T17:15:00Z",
          "readOnly": true,
          "type": "string"
        },
        "captured_date": {
          "description": "Date of the capture event",
          "example": "2016-01-21",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "allLinksForAPayment": {
      "description": "self,events and next links of a Payment",
      "properties": {
        "cancel": {
          "$ref": "#/definitions/paymentPOSTLink",
          "description": "cancel",
          "readOnly": true
        },
        "events": {
          "$ref": "#/definitions/paymentLink",
          "description": "events",
          "readOnly": true
        },
        "next_url": {
          "$ref": "#/definitions/paymentLink",
          "description": "next_url",
          "readOnly": true
        },
        "next_url_post": {
          "$ref": "#/definitions/paymentPOSTLink",
          "description": "next_url_post",
          "readOnly": true
        },
        "refunds": {
          "$ref": "#/definitions/paymentLink",
          "description": "refunds",
          "readOnly": true
        },
        "self": {
          "$ref": "#/definitions/paymentLink",
          "description": "self",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "linksForEvents": {
      "description": "links for events resource",
      "properties": {
        "self": {
          "$ref": "#/definitions/paymentLink",
          "description": "self",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "linksForSearchResults": {
      "description": "links for search payment resource",
      "properties": {
        "cancel": {
          "$ref": "#/definitions/paymentPOSTLink",
          "description": "cancel",
          "readOnly": true
        },
        "events": {
          "$ref": "#/definitions/paymentLink",
          "description": "events",
          "readOnly": true
        },
        "refunds": {
          "$ref": "#/definitions/paymentLink",
          "description": "refunds",
          "readOnly": true
        },
        "self": {
          "$ref": "#/definitions/paymentLink",
          "description": "self",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "payment-event-link": {
      "description": "Resource link for a payment of a payment event",
      "properties": {
        "payment_url": {
          "$ref": "#/definitions/paymentLink",
          "description": "payment_url",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "paymentLink": {
      "description": "A link related to a payment",
      "properties": {
        "href": {
          "example": "https://an.example.link/from/payment/platform",
          "readOnly": true,
          "type": "string"
        },
        "method": {
          "example": "GET",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentPOSTLink": {
      "description": "A POST link related to a payment",
      "properties": {
        "href": {
          "example": "https://an.example.link/from/payment/platform",
          "readOnly": true,
          "type": "string"
        },
        "method": {
          "example": "POST",
          "readOnly": true,
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "type": "object"
          },
          "example": "\"description\":\"This is a value for a parameter called description\"",
          "type": "object"
        },
        "type": {
          "example": "multipart/form-data",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}
