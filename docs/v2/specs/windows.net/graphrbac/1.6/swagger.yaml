swagger: '2.0'
schemes:
  - https
host: graph.windows.net
info:
  description: The Graph RBAC Management Client
  title: GraphRbacManagementClient
  version: '1.6'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/graphrbac/data-plane/stable/1.6/graphrbac.json'
      version: '2.0'
  x-preferred: true
  x-providerName: windows.net
  x-serviceName: graphrbac
consumes:
  - application/json
  - text/json
produces:
  - application/json
  - text/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  ApiVersionParameter:
    description: Client API version.
    in: query
    name: api-version
    required: true
    type: string
  tenantIDInPath:
    description: The tenant ID.
    in: path
    name: tenantID
    required: true
    type: string
    x-ms-parameter-location: client
paths:
  '/{tenantID}/applications':
    get:
      description: Lists applications by filter parameters.
      operationId: Applications_List
      parameters:
        - description: The filters to apply to the operation.
          in: query
          name: $filter
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/ApplicationListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Application
      x-ms-odata: '#/definitions/Application'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Applications_ListNext
    post:
      description: Create a new application.
      operationId: Applications_Create
      parameters:
        - description: The parameters for creating an application.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ApplicationCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '201':
          description: The application was created successfully.
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Application
  '/{tenantID}/applications/{applicationObjectId}':
    delete:
      description: Delete an application.
      operationId: Applications_Delete
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Application
    get:
      description: Get an application by object ID.
      operationId: Applications_Get
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Application
    patch:
      description: Update an existing application.
      operationId: Applications_Patch
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - description: Parameters to update an existing application.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ApplicationUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Application
  '/{tenantID}/applications/{applicationObjectId}/$links/owners':
    post:
      description: Add an owner to an application.
      operationId: Applications_AddOwner
      parameters:
        - description: The object ID of the application to which to add the owner.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - description: 'The URL of the owner object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.'
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ApplicationAddOwnerParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content. Indicates success. No response body is returned.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ApplicationOwners
  '/{tenantID}/applications/{applicationObjectId}/keyCredentials':
    get:
      description: Get the keyCredentials associated with an application.
      operationId: Applications_ListKeyCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/KeyCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ApplicationKeyCredentials
      x-ms-pageable: {}
    patch:
      description: Update the keyCredentials associated with an application.
      operationId: Applications_UpdateKeyCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - description: Parameters to update the keyCredentials of an existing application.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/KeyCredentialsUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ApplicationKeyCredentials
  '/{tenantID}/applications/{applicationObjectId}/owners':
    get:
      description: The owners are a set of non-admin users who are allowed to modify this object.
      operationId: Applications_ListOwners
      parameters:
        - description: The object ID of the application for which to get owners.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/DirectoryObjectListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      summary: Directory objects that are owners of the application.
      tags:
        - ApplicationOwners
      x-ms-pageable: {}
  '/{tenantID}/applications/{applicationObjectId}/passwordCredentials':
    get:
      description: Get the passwordCredentials associated with an application.
      operationId: Applications_ListPasswordCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/PasswordCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ApplicationPasswordCredentials
      x-ms-pageable: {}
    patch:
      description: Update passwordCredentials associated with an application.
      operationId: Applications_UpdatePasswordCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          type: string
        - description: Parameters to update passwordCredentials of an existing application.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/PasswordCredentialsUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ApplicationPasswordCredentials
  '/{tenantID}/domains':
    get:
      description: Gets a list of domains for the current tenant.
      operationId: Domains_List
      parameters:
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/DomainListResult'
      tags:
        - Domain
      x-ms-odata: '#/definitions/User'
      x-ms-pageable: {}
  '/{tenantID}/domains/{domainName}':
    get:
      description: Gets a specific domain in the current tenant.
      operationId: Domains_Get
      parameters:
        - description: name of the domain.
          in: path
          name: domainName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/Domain'
      tags:
        - Domain
  '/{tenantID}/getObjectsByObjectIds':
    post:
      description: Gets AD group membership for the specified AD object IDs.
      operationId: Objects_GetObjectsByObjectIds
      parameters:
        - description: Objects filtering parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/GetObjectsParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/GetObjectsResult'
      tags:
        - Objects
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Objects_GetObjectsByObjectIdsNext
  '/{tenantID}/groups':
    get:
      description: Gets list of groups for the current tenant.
      operationId: Groups_List
      parameters:
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/GroupListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
      x-ms-odata: '#/definitions/ADGroup'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_ListNext
    post:
      description: Create a group in the directory.
      operationId: Groups_Create
      parameters:
        - description: The parameters for the group to create.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/GroupCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ADGroup'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
  '/{tenantID}/groups/{groupObjectId}/$links/members':
    post:
      description: Add a member to a group.
      operationId: Groups_AddMember
      parameters:
        - description: The object ID of the group to which to add the member.
          in: path
          name: groupObjectId
          required: true
          type: string
        - description: 'The URL of the member object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.'
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/GroupAddMemberParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content. Indicates success. No response body is returned.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
  '/{tenantID}/groups/{groupObjectId}/$links/members/{memberObjectId}':
    delete:
      description: Remove a member from a group.
      operationId: Groups_RemoveMember
      parameters:
        - description: The object ID of the group from which to remove the member.
          in: path
          name: groupObjectId
          required: true
          type: string
        - description: Member object id
          in: path
          name: memberObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content. Indicates success. No response body is returned.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
  '/{tenantID}/groups/{objectId}':
    delete:
      description: Delete a group from the directory.
      operationId: Groups_Delete
      parameters:
        - description: The object ID of the group to delete.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
    get:
      description: Gets group information from the directory.
      operationId: Groups_Get
      parameters:
        - description: The object ID of the user for which to get group information.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/ADGroup'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
  '/{tenantID}/groups/{objectId}/getMemberGroups':
    post:
      description: Gets a collection of object IDs of groups of which the specified group is a member.
      operationId: Groups_GetMemberGroups
      parameters:
        - description: The object ID of the group for which to get group membership.
          in: path
          name: objectId
          required: true
          type: string
        - description: Group filtering parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/GroupGetMemberGroupsParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/GroupGetMemberGroupsResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
      x-ms-pageable: {}
  '/{tenantID}/groups/{objectId}/members':
    get:
      description: Gets the members of a group.
      operationId: Groups_GetGroupMembers
      parameters:
        - description: The object ID of the group whose members should be retrieved.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/GetObjectsResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_GetGroupMembersNext
  '/{tenantID}/isMemberOf':
    post:
      description: 'Checks whether the specified user, group, contact, or service principal is a direct or transitive member of the specified group.'
      operationId: Groups_IsMemberOf
      parameters:
        - description: The check group membership parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CheckGroupMembershipParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: 'OK. Indicates success. Returns true if the user, contact, group, or service principal is a direct or a transitive member of the specified group; otherwsie, false.'
          schema:
            $ref: '#/definitions/CheckGroupMembershipResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
  '/{tenantID}/me':
    get:
      description: Gets the details for the currently logged-in user.
      operationId: Objects_GetCurrentUser
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/AADObject'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Objects
  '/{tenantID}/servicePrincipals':
    get:
      description: Gets a list of service principals from the current tenant.
      operationId: ServicePrincipals_List
      parameters:
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/ServicePrincipalListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipal
      x-ms-odata: '#/definitions/ServicePrincipal'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: ServicePrincipals_ListNext
    post:
      description: Creates a service principal in the directory.
      operationId: ServicePrincipals_Create
      parameters:
        - description: Parameters to create a service principal.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ServicePrincipalCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '201':
          description: The service principal was created successfully.
          schema:
            $ref: '#/definitions/ServicePrincipal'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipal
  '/{tenantID}/servicePrincipals/{objectId}':
    delete:
      description: Deletes a service principal from the directory.
      operationId: ServicePrincipals_Delete
      parameters:
        - description: The object ID of the service principal to delete.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipal
    get:
      description: Gets service principal information from the directory.
      operationId: ServicePrincipals_Get
      parameters:
        - description: The object ID of the service principal to get.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/ServicePrincipal'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipal
  '/{tenantID}/servicePrincipals/{objectId}/keyCredentials':
    get:
      description: Get the keyCredentials associated with the specified service principal.
      operationId: ServicePrincipals_ListKeyCredentials
      parameters:
        - description: The object ID of the service principal for which to get keyCredentials.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/KeyCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipalKeyCredentials
      x-ms-pageable: {}
    patch:
      description: Update the keyCredentials associated with a service principal.
      operationId: ServicePrincipals_UpdateKeyCredentials
      parameters:
        - description: The object ID for which to get service principal information.
          in: path
          name: objectId
          required: true
          type: string
        - description: Parameters to update the keyCredentials of an existing service principal.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/KeyCredentialsUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipalKeyCredentials
  '/{tenantID}/servicePrincipals/{objectId}/owners':
    get:
      description: The owners are a set of non-admin users who are allowed to modify this object.
      operationId: ServicePrincipals_ListOwners
      parameters:
        - description: The object ID of the service principal for which to get owners.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/DirectoryObjectListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      summary: Directory objects that are owners of this service principal.
      tags:
        - ServicePrincipalOwners
      x-ms-pageable: {}
  '/{tenantID}/servicePrincipals/{objectId}/passwordCredentials':
    get:
      description: Gets the passwordCredentials associated with a service principal.
      operationId: ServicePrincipals_ListPasswordCredentials
      parameters:
        - description: The object ID of the service principal.
          in: path
          name: objectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/PasswordCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipalPasswordCredentials
      x-ms-pageable: {}
    patch:
      description: Updates the passwordCredentials associated with a service principal.
      operationId: ServicePrincipals_UpdatePasswordCredentials
      parameters:
        - description: The object ID of the service principal.
          in: path
          name: objectId
          required: true
          type: string
        - description: Parameters to update the passwordCredentials of an existing service principal.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/PasswordCredentialsUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipalPasswordCredentials
  '/{tenantID}/users':
    get:
      description: Gets list of users for the current tenant.
      operationId: Users_List
      parameters:
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/UserListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - User
      x-ms-odata: '#/definitions/User'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Users_ListNext
    post:
      description: Create a new user.
      operationId: Users_Create
      parameters:
        - description: Parameters to create a user.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/UserCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '201':
          description: Created. Indicates success. The new user is returned in the response body.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - User
  '/{tenantID}/users/{objectId}/getMemberGroups':
    post:
      description: Gets a collection that contains the object IDs of the groups of which the user is a member.
      operationId: Users_GetMemberGroups
      parameters:
        - description: The object ID of the user for which to get group membership.
          in: path
          name: objectId
          required: true
          type: string
        - description: User filtering parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/UserGetMemberGroupsParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/UserGetMemberGroupsResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - User
      x-ms-pageable: {}
  '/{tenantID}/users/{upnOrObjectId}':
    delete:
      description: Delete a user.
      operationId: Users_Delete
      parameters:
        - description: The object ID or principal name of the user to delete.
          in: path
          name: upnOrObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - User
    get:
      description: Gets user information from the directory.
      operationId: Users_Get
      parameters:
        - description: The object ID or principal name of the user for which to get information.
          in: path
          name: upnOrObjectId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - User
    patch:
      description: Updates a user.
      operationId: Users_Update
      parameters:
        - description: The object ID or principal name of the user to update.
          in: path
          name: upnOrObjectId
          required: true
          type: string
        - description: Parameters to update an existing user.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/UserUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - User
definitions:
  AADObject:
    additionalProperties:
      type: object
    description: The properties of an Active Directory object.
    properties:
      appId:
        description: The application ID.
        readOnly: true
        type: string
      appPermissions:
        description: The application permissions.
        items:
          type: string
        readOnly: true
        type: array
      availableToOtherTenants:
        description: Whether the application is be available to other tenants.
        readOnly: true
        type: boolean
      displayName:
        description: The display name of the object.
        type: string
      homepage:
        description: The home page of the application.
        readOnly: true
        type: string
      identifierUris:
        description: A collection of URIs for the application.
        items:
          type: string
        readOnly: true
        type: array
      mail:
        description: The primary email address of the object.
        type: string
      mailEnabled:
        description: Whether the AAD object is mail-enabled.
        type: boolean
      mailNickname:
        description: The mail alias for the user.
        readOnly: true
        type: string
      objectId:
        description: The ID of the object.
        type: string
      objectType:
        description: The type of AAD object.
        type: string
      replyUrls:
        description: A collection of reply URLs for the application.
        items:
          type: string
        readOnly: true
        type: array
      securityEnabled:
        description: Whether the AAD object is security-enabled.
        type: boolean
      servicePrincipalNames:
        description: A collection of service principal names associated with the object.
        items:
          type: string
        type: array
      signInName:
        description: The sign-in name of the object.
        type: string
      usageLocation:
        description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: "US", "JP", and "GB".'
        readOnly: true
        type: string
      userPrincipalName:
        description: The principal name of the object.
        type: string
      userType:
        description: The user type of the object.
        type: string
    type: object
  ADGroup:
    allOf:
      - $ref: '#/definitions/DirectoryObject'
    description: Active Directory group information.
    properties:
      displayName:
        description: The display name of the group.
        type: string
      mail:
        description: The primary email address of the group.
        type: string
      securityEnabled:
        description: Whether the group is security-enable.
        type: boolean
    type: object
    x-ms-discriminator-value: Group
  Application:
    allOf:
      - $ref: '#/definitions/DirectoryObject'
    description: Active Directory application information.
    properties:
      appId:
        description: The application ID.
        type: string
      appPermissions:
        description: The application permissions.
        items:
          type: string
        type: array
      availableToOtherTenants:
        description: Whether the application is be available to other tenants.
        type: boolean
      displayName:
        description: The display name of the application.
        type: string
      homepage:
        description: The home page of the application.
        type: string
      identifierUris:
        description: A collection of URIs for the application.
        items:
          type: string
        type: array
      oauth2AllowImplicitFlow:
        description: Whether to allow implicit grant flow for OAuth2
        type: boolean
      replyUrls:
        description: A collection of reply URLs for the application.
        items:
          type: string
        type: array
    type: object
  ApplicationAddOwnerParameters:
    additionalProperties:
      type: object
    description: Request parameters for adding a owner to an application.
    properties:
      url:
        description: 'A owner object URL, such as "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd", where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the owner (user, application, servicePrincipal, group) to be added.'
        type: string
    required:
      - url
    type: object
  ApplicationCreateParameters:
    additionalProperties:
      type: object
    description: Request parameters for creating a new application.
    properties:
      availableToOtherTenants:
        description: Whether the application is available to other tenants.
        type: boolean
      displayName:
        description: The display name of the application.
        type: string
      homepage:
        description: The home page of the application.
        type: string
      identifierUris:
        description: A collection of URIs for the application.
        items:
          type: string
        type: array
      keyCredentials:
        description: The list of KeyCredential objects.
        items:
          $ref: '#/definitions/KeyCredential'
        type: array
      oauth2AllowImplicitFlow:
        description: Whether to allow implicit grant flow for OAuth2
        type: boolean
      passwordCredentials:
        description: The list of PasswordCredential objects.
        items:
          $ref: '#/definitions/PasswordCredential'
        type: array
      replyUrls:
        description: A collection of reply URLs for the application.
        items:
          type: string
        type: array
      requiredResourceAccess:
        description: Specifies resources that this application requires access to and the set of OAuth permission scopes and application roles that it needs under each of those resources. This pre-configuration of required resource access drives the consent experience.
        items:
          $ref: '#/definitions/RequiredResourceAccess'
        type: array
    required:
      - availableToOtherTenants
      - displayName
      - identifierUris
    type: object
  ApplicationListResult:
    description: Application list operation result.
    properties:
      odata.nextLink:
        description: The URL to get the next set of results.
        type: string
      value:
        description: A collection of applications.
        items:
          $ref: '#/definitions/Application'
        type: array
    type: object
  ApplicationUpdateParameters:
    additionalProperties:
      type: object
    description: Request parameters for updating an existing application.
    properties:
      availableToOtherTenants:
        description: Whether the application is available to other tenants
        type: boolean
      displayName:
        description: The display name of the application.
        type: string
      homepage:
        description: The home page of the application.
        type: string
      identifierUris:
        description: A collection of URIs for the application.
        items:
          type: string
        type: array
      keyCredentials:
        description: The list of KeyCredential objects.
        items:
          $ref: '#/definitions/KeyCredential'
        type: array
      oauth2AllowImplicitFlow:
        description: Whether to allow implicit grant flow for OAuth2
        type: boolean
      passwordCredentials:
        description: The list of PasswordCredential objects.
        items:
          $ref: '#/definitions/PasswordCredential'
        type: array
      replyUrls:
        description: A collection of reply URLs for the application.
        items:
          type: string
        type: array
      requiredResourceAccess:
        description: Specifies resources that this application requires access to and the set of OAuth permission scopes and application roles that it needs under each of those resources. This pre-configuration of required resource access drives the consent experience.
        items:
          $ref: '#/definitions/RequiredResourceAccess'
        type: array
    type: object
  CheckGroupMembershipParameters:
    additionalProperties:
      type: object
    description: Request parameters for IsMemberOf API call.
    properties:
      groupId:
        description: The object ID of the group to check.
        type: string
      memberId:
        description: 'The object ID of the contact, group, user, or service principal to check for membership in the specified group.'
        type: string
    required:
      - groupId
      - memberId
    type: object
  CheckGroupMembershipResult:
    additionalProperties:
      type: object
    description: Server response for IsMemberOf API call
    properties:
      value:
        description: 'True if the specified user, group, contact, or service principal has either direct or transitive membership in the specified group; otherwise, false.'
        type: boolean
    type: object
  DirectoryObject:
    additionalProperties:
      type: object
    description: Represents an Azure Active Directory object.
    discriminator: objectType
    properties:
      deletionTimestamp:
        description: The time at which the directory object was deleted.
        format: date-time
        readOnly: true
        type: string
      objectId:
        description: The object ID.
        readOnly: true
        type: string
      objectType:
        description: The object type.
        readOnly: true
        type: string
    type: object
  DirectoryObjectListResult:
    description: DirectoryObject list operation result.
    properties:
      value:
        description: A collection of DirectoryObject.
        items:
          $ref: '#/definitions/DirectoryObject'
        type: array
    type: object
  Domain:
    additionalProperties:
      type: object
    description: Active Directory Domain information.
    properties:
      authenticationType:
        description: the type of the authentication into the domain.
        readOnly: true
        type: string
      isDefault:
        description: if this is the default domain in the tenant.
        readOnly: true
        type: boolean
      isVerified:
        description: if this domain's ownership is verified.
        readOnly: true
        type: boolean
      name:
        description: the domain name.
        type: string
    required:
      - name
    type: object
  DomainListResult:
    description: Server response for Get tenant domains API call.
    properties:
      value:
        description: the list of domains.
        items:
          $ref: '#/definitions/Domain'
        type: array
    type: object
  ErrorMessage:
    description: Active Directory error message.
    properties:
      value:
        description: Error message value.
        type: string
        x-ms-client-name: message
    type: object
  GetObjectsParameters:
    additionalProperties:
      type: object
    description: Request parameters for the GetObjectsByObjectIds API.
    properties:
      includeDirectoryObjectReferences:
        description: 'If true, also searches for object IDs in the partner tenant.'
        type: boolean
      objectIds:
        description: The requested object IDs.
        items:
          type: string
        type: array
      types:
        description: The requested object types.
        items:
          type: string
        type: array
    required:
      - includeDirectoryObjectReferences
    type: object
  GetObjectsResult:
    description: The response to an Active Directory object inquiry API request.
    properties:
      odata.nextLink:
        description: The URL to get the next set of results.
        type: string
      value:
        description: A collection of Active Directory objects.
        items:
          $ref: '#/definitions/AADObject'
        type: array
    type: object
  GraphError:
    description: Active Directory error information.
    properties:
      odata.error:
        $ref: '#/definitions/OdataError'
        description: A Graph API error.
        type: object
        x-ms-client-flatten: true
    type: object
  GroupAddMemberParameters:
    additionalProperties:
      type: object
    description: Request parameters for adding a member to a group.
    properties:
      url:
        description: 'A member object URL, such as "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd", where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the member (user, application, servicePrincipal, group) to be added.'
        type: string
    required:
      - url
    type: object
  GroupCreateParameters:
    additionalProperties:
      type: object
    description: Request parameters for creating a new group.
    properties:
      displayName:
        description: Group display name
        type: string
      mailEnabled:
        description: Whether the group is mail-enabled. Must be false. This is because only pure security groups can be created using the Graph API.
        enum:
          - false
        type: boolean
      mailNickname:
        description: Mail nickname
        type: string
      securityEnabled:
        description: Whether the group is a security group. Must be true. This is because only pure security groups can be created using the Graph API.
        enum:
          - true
        type: boolean
    required:
      - displayName
      - mailEnabled
      - mailNickname
      - securityEnabled
    type: object
  GroupGetMemberGroupsParameters:
    additionalProperties:
      type: object
    description: Request parameters for GetMemberGroups API call.
    properties:
      securityEnabledOnly:
        description: 'If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked.'
        type: boolean
    required:
      - securityEnabledOnly
    type: object
  GroupGetMemberGroupsResult:
    description: Server response for GetMemberGroups API call.
    properties:
      value:
        description: A collection of group IDs of which the group is a member.
        items:
          type: string
        type: array
    type: object
  GroupListResult:
    description: Server response for Get tenant groups API call
    properties:
      odata.nextLink:
        description: The URL to get the next set of results.
        type: string
      value:
        description: A collection of Active Directory groups.
        items:
          $ref: '#/definitions/ADGroup'
        type: array
    type: object
  KeyCredential:
    additionalProperties:
      type: object
    description: Active Directory Key Credential information.
    properties:
      customKeyIdentifier:
        description: Custom Key Identifier
        format: byte
        type: string
      endDate:
        description: End date.
        format: date-time
        type: string
      keyId:
        description: Key ID.
        type: string
      startDate:
        description: Start date.
        format: date-time
        type: string
      type:
        description: Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'.
        type: string
      usage:
        description: Usage. Acceptable values are 'Verify' and 'Sign'.
        type: string
      value:
        description: Key value.
        type: string
    type: object
  KeyCredentialListResult:
    description: KeyCredential list operation result.
    properties:
      value:
        description: A collection of KeyCredentials.
        items:
          $ref: '#/definitions/KeyCredential'
        type: array
    type: object
  KeyCredentialsUpdateParameters:
    description: Request parameters for a KeyCredentials update operation
    properties:
      value:
        description: A collection of KeyCredentials.
        items:
          $ref: '#/definitions/KeyCredential'
        type: array
    required:
      - value
    type: object
  OdataError:
    description: Active Directory OData error information.
    properties:
      code:
        description: Error code.
        type: string
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Error Message.
        type: object
        x-ms-client-flatten: true
    type: object
  PasswordCredential:
    additionalProperties:
      type: object
    description: Active Directory Password Credential information.
    properties:
      endDate:
        description: End date.
        format: date-time
        type: string
      keyId:
        description: Key ID.
        type: string
      startDate:
        description: Start date.
        format: date-time
        type: string
      value:
        description: Key value.
        type: string
    type: object
  PasswordCredentialListResult:
    description: PasswordCredential list operation result.
    properties:
      value:
        description: A collection of PasswordCredentials.
        items:
          $ref: '#/definitions/PasswordCredential'
        type: array
    type: object
  PasswordCredentialsUpdateParameters:
    description: Request parameters for a PasswordCredentials update operation.
    properties:
      value:
        description: A collection of PasswordCredentials.
        items:
          $ref: '#/definitions/PasswordCredential'
        type: array
    required:
      - value
    type: object
  PasswordProfile:
    additionalProperties:
      type: object
    description: The password profile associated with a user.
    properties:
      forceChangePasswordNextLogin:
        description: Whether to force a password change on next login.
        type: boolean
      password:
        description: Password
        type: string
    required:
      - password
    type: object
  RequiredResourceAccess:
    additionalProperties:
      type: object
    description: Specifies the set of OAuth 2.0 permission scopes and app roles under the specified resource that an application requires access to. The specified OAuth 2.0 permission scopes may be requested by client applications (through the requiredResourceAccess collection) when calling a resource application. The requiredResourceAccess property of the Application entity is a collection of ReqiredResourceAccess.
    properties:
      resourceAccess:
        description: The list of OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
        items:
          $ref: '#/definitions/ResourceAccess'
        type: array
      resourceAppId:
        description: The unique identifier for the resource that the application requires access to. This should be equal to the appId declared on the target resource application.
        type: string
    required:
      - resourceAccess
    type: object
  ResourceAccess:
    additionalProperties:
      type: object
    description: Specifies an OAuth 2.0 permission scope or an app role that an application requires. The resourceAccess property of the RequiredResourceAccess type is a collection of ResourceAccess.
    properties:
      id:
        description: The unique identifier for one of the OAuth2Permission or AppRole instances that the resource application exposes.
        type: string
      type:
        description: Specifies whether the id property references an OAuth2Permission or an AppRole. Possible values are "scope" or "role".
        type: string
    required:
      - id
    type: object
  ServicePrincipal:
    allOf:
      - $ref: '#/definitions/DirectoryObject'
    description: Active Directory service principal information.
    properties:
      appId:
        description: The application ID.
        type: string
      displayName:
        description: The display name of the service principal.
        type: string
      servicePrincipalNames:
        description: A collection of service principal names.
        items:
          type: string
        type: array
    type: object
  ServicePrincipalCreateParameters:
    additionalProperties:
      type: object
    description: Request parameters for creating a new service principal.
    properties:
      accountEnabled:
        description: Whether the account is enabled
        type: boolean
      appId:
        description: application Id
        type: string
      keyCredentials:
        description: A collection of KeyCredential objects.
        items:
          $ref: '#/definitions/KeyCredential'
        type: array
      passwordCredentials:
        description: A collection of PasswordCredential objects
        items:
          $ref: '#/definitions/PasswordCredential'
        type: array
    required:
      - appId
      - accountEnabled
    type: object
  ServicePrincipalListResult:
    description: Server response for get tenant service principals API call.
    properties:
      odata.nextLink:
        description: the URL to get the next set of results.
        type: string
      value:
        description: the list of service principals.
        items:
          $ref: '#/definitions/ServicePrincipal'
        type: array
    type: object
  SignInName:
    additionalProperties:
      type: object
    description: Contains information about a sign-in name of a local account user in an Azure Active Directory B2C tenant.
    properties:
      type:
        description: 'A string value that can be used to classify user sign-in types in your directory, such as ''emailAddress'' or ''userName''.'
        type: string
      value:
        description: 'The sign-in used by the local account. Must be unique across the company/tenant. For example, ''johnc@example.com''.'
        type: string
    type: object
  User:
    allOf:
      - $ref: '#/definitions/DirectoryObject'
    description: Active Directory user information.
    properties:
      accountEnabled:
        description: Whether the account is enabled.
        type: boolean
      displayName:
        description: The display name of the user.
        type: string
      givenName:
        description: The given name for the user.
        type: string
      immutableId:
        description: This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. It is used to associate an on-premises Active Directory user account with their Azure AD user object.
        type: string
      mail:
        description: The primary email address of the user.
        type: string
      mailNickname:
        description: The mail alias for the user.
        type: string
      signInNames:
        description: The sign-in names of the user.
        items:
          $ref: '#/definitions/SignInName'
        type: array
      surname:
        description: The user's surname (family name or last name).
        type: string
      usageLocation:
        description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: "US", "JP", and "GB".'
        type: string
      userPrincipalName:
        description: The principal name of the user.
        type: string
      userType:
        description: 'A string value that can be used to classify user types in your directory, such as ''Member'' and ''Guest''.'
        enum:
          - Member
          - Guest
        type: string
        x-ms-enum:
          modelAsString: true
          name: UserType
    type: object
  UserBase:
    additionalProperties:
      type: object
    properties:
      givenName:
        description: The given name for the user.
        type: string
      immutableId:
        description: This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. It is used to associate an on-premises Active Directory user account with their Azure AD user object.
        type: string
      surname:
        description: The user's surname (family name or last name).
        type: string
      usageLocation:
        description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: "US", "JP", and "GB".'
        type: string
      userType:
        description: 'A string value that can be used to classify user types in your directory, such as ''Member'' and ''Guest''.'
        enum:
          - Member
          - Guest
        type: string
        x-ms-enum:
          modelAsString: true
          name: UserType
    type: object
  UserCreateParameters:
    allOf:
      - $ref: '#/definitions/UserBase'
    description: Request parameters for creating a new work or school account user.
    properties:
      accountEnabled:
        description: Whether the account is enabled.
        type: boolean
      displayName:
        description: The display name of the user.
        type: string
      mail:
        description: The primary email address of the user.
        type: string
      mailNickname:
        description: The mail alias for the user.
        type: string
      passwordProfile:
        $ref: '#/definitions/PasswordProfile'
        description: Password Profile
      userPrincipalName:
        description: The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant.
        type: string
    required:
      - accountEnabled
      - displayName
      - passwordProfile
      - userPrincipalName
      - mailNickname
    type: object
  UserGetMemberGroupsParameters:
    additionalProperties:
      type: object
    description: Request parameters for GetMemberGroups API call.
    properties:
      securityEnabledOnly:
        description: 'If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked.'
        type: boolean
    required:
      - securityEnabledOnly
    type: object
  UserGetMemberGroupsResult:
    description: Server response for GetMemberGroups API call.
    properties:
      value:
        description: A collection of group IDs of which the user is a member.
        items:
          type: string
        type: array
    type: object
  UserListResult:
    description: Server response for Get tenant users API call.
    properties:
      odata.nextLink:
        description: The URL to get the next set of results.
        type: string
      value:
        description: the list of users.
        items:
          $ref: '#/definitions/User'
        type: array
    type: object
  UserUpdateParameters:
    allOf:
      - $ref: '#/definitions/UserBase'
    description: Request parameters for updating an existing work or school account user.
    properties:
      accountEnabled:
        description: Whether the account is enabled.
        type: boolean
      displayName:
        description: The display name of the user.
        type: string
      mailNickname:
        description: The mail alias for the user.
        type: string
      passwordProfile:
        $ref: '#/definitions/PasswordProfile'
        description: The password profile of the user.
      userPrincipalName:
        description: The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant.
        type: string
    type: object
x-ms-paths:
  '/{tenantID}/{nextLink}?Applications_ListNext':
    get:
      description: Gets a list of applications from the current tenant.
      operationId: Applications_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/ApplicationListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Applications
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Applications_ListNext
  '/{tenantID}/{nextLink}?Groups_GetGroupMembersNext':
    get:
      description: Gets the members of a group.
      operationId: Groups_GetGroupMembersNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/GetObjectsResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_GetGroupMembersNext
  '/{tenantID}/{nextLink}?Groups_ListNext':
    get:
      description: Gets a list of groups for the current tenant.
      operationId: Groups_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/GroupListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_ListNext
  '/{tenantID}/{nextLink}?Objects_GetObjectsByObjectIdsNext':
    post:
      description: Gets AD group membership for the specified AD object IDs.
      operationId: Objects_GetObjectsByObjectIdsNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/GetObjectsResult'
      tags:
        - Objects
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Objects_GetObjectsByObjectIdsNext
  '/{tenantID}/{nextLink}?ServicePrincipals_ListNext':
    get:
      description: Gets a list of service principals from the current tenant.
      operationId: ServicePrincipals_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/ServicePrincipalListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - ServicePrincipal
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: ServicePrincipals_ListNext
  '/{tenantID}/{nextLink}?Users_ListNext':
    get:
      description: Gets a list of users for the current tenant.
      operationId: Users_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          schema:
            $ref: '#/definitions/UserListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/GraphError'
      tags:
        - User
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Users_ListNext
